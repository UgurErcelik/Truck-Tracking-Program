
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author UguR
 */
public class ÇıkışEkranı extends javax.swing.JFrame {

    SorguKamyon s = new SorguKamyon();
    public ÇıkışEkranı() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablo = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cıkıs_saat = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cıkıs_kilo = new javax.swing.JTextField();
        kaydet = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        sorgula = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        tablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Giriş Kilosu", "Giriş Saati", "Plaka", "Marka", "Tip", "Çıkış Saati", "Çıkış Kilosu"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablo);
        if (tablo.getColumnModel().getColumnCount() > 0) {
            tablo.getColumnModel().getColumn(0).setResizable(false);
            tablo.getColumnModel().getColumn(1).setResizable(false);
            tablo.getColumnModel().getColumn(2).setResizable(false);
            tablo.getColumnModel().getColumn(3).setResizable(false);
            tablo.getColumnModel().getColumn(4).setResizable(false);
            tablo.getColumnModel().getColumn(5).setResizable(false);
            tablo.getColumnModel().getColumn(6).setResizable(false);
            tablo.getColumnModel().getColumn(7).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Çıkış Saati:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Çıkış Kilosu:");

        kaydet.setText("Kaydet");
        kaydet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kaydetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cıkıs_saat, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cıkıs_kilo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(kaydet))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cıkıs_saat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cıkıs_kilo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(94, 94, 94)
                .addComponent(kaydet)
                .addContainerGap(179, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 102));

        sorgula.setText("Sorgula");
        sorgula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sorgulaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sorgula)
                .addGap(349, 349, 349))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(sorgula)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sorgulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sorgulaActionPerformed
        Sorgulama frame = new Sorgulama();
        frame.setVisible(true);
    }//GEN-LAST:event_sorgulaActionPerformed

    private void kaydetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kaydetActionPerformed
        if(cıkıs_saat.getText().equals("")&&cıkıs_kilo.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,"Saat ve Kilo Girin");
        }
        
        Map<String,String> liste=new LinkedHashMap<>();
        DefaultTableModel model = (DefaultTableModel)tablo.getModel();
        int row = tablo.getSelectedRow();
        
        String id = (String) model.getValueAt(row, 0);
        String girissaati = (String) model.getValueAt(row, 0);
        String giriskilosu = (String) model.getValueAt(row, 0);
        String plaka = (String) model.getValueAt(row, 0);
        String marka = (String) model.getValueAt(row, 0);
        String tip = (String) model.getValueAt(row, 0);
        String cıkıssaati = cıkıs_saat.getText();
        String cıkıskilosu = cıkıs_kilo.getText();
        
        liste.put("id", id);
        liste.put("Giriş Saati", girissaati);
        liste.put("Giriş Kilosu", giriskilosu);
        liste.put("Plaka", plaka);
        liste.put("Marka", marka);
        liste.put("Tip", tip);
        liste.put("Çıkış Saati", cıkıssaati);
        liste.put("Çıkış Kilosu", cıkıskilosu);
        
        cıkıs_saat.setText("");
        cıkıs_kilo.setText("");
        
        s.kamyoncıkıs(liste);
    }//GEN-LAST:event_kaydetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ÇıkışEkranı.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ÇıkışEkranı.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ÇıkışEkranı.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ÇıkışEkranı.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ÇıkışEkranı().setVisible(true);
            }
        });
    }
    class SorguKamyon {
    
    public static final String kullanici_adi = "root";
    public static final String parola = "";
    public static final String databasename = "proje";
    public static final String hostlocal = "localhost";
    public static final int port = 3306;
    
    private Connection conn = null;
    private Statement stmt = null;
    private PreparedStatement psmt = null;
    
    public ArrayList<Arac> KamyonSorgulama()
    {
        ArrayList<Arac> kmyn = new ArrayList<Arac>();
        try{
            stmt=conn.createStatement();
            String sorgu = "SELECT * FROM kamyon";
            ResultSet rs = stmt.executeQuery(sorgu);
            while(rs.next()){
                
                int id = rs.getInt("id");
                String girissaati = rs.getString("Giriş Saati");
                int giriskilosu = rs.getInt("Giriş Kilosu");
                String plaka = rs.getString("Plaka");
                String marka = rs.getString("Marka");
                String tip = rs.getString("Tip");
                String cıkıssaati = rs.getString("Çıkış Saati");
                int cıkıskilosu = rs.getInt("Çıkış Kilosu");
                
                
                kmyn.add(new Arac(id,girissaati,giriskilosu,plaka,marka,tip,cıkıssaati,cıkıskilosu));
                //System.out.format("%s, %s, %s, %s, %s, %s, %s, %s\n", id, girissaati, giriskilosu, plaka, marka, tip,cıkıssaati,cıkıskilosu);
                //System.out.println("id : " + id + "Giriş Saati: " + girissaati + "Giriş Kilosu: " + giriskilosu + "Plaka : " + plaka + "Marka : " + marka + "Tip : " + tip + "Çıkış Saati : " + cıkıssaati + "Çıkış Kilosu : " + cıkıskilosu);
            }
            return kmyn;
        }catch(SQLException ex)
        {
            Logger.getLogger(SorguKamyon.class.getName()).log(Level.SEVERE,null,ex);
            return null;
        }
    }
    
    public SorguKamyon()
    {
         String url = "jdbc:mysql://"+ hostlocal + ":" + port + "/" + databasename ;
         try{
             Class.forName("com.mysql.jdbc.Driver");
         }catch(ClassNotFoundException e)
         {
             System.out.println("Driver Bulunamadı");
         }
         try{
             
            conn = DriverManager.getConnection(url,kullanici_adi,parola);
            System.out.println("Bağlantı Başarılı");
        }catch(SQLException e)
        {
            System.out.println("Bağlantı Başarısız");
        }
         
    }
    
    public void aracgetir()
    {
        String sorgu="Select*From kamyon";
        try{
            stmt=conn.createStatement();
            ResultSet rs=stmt.executeQuery(sorgu);
            while(rs.next()){
                int id = rs.getInt("id");
                String girissaati = rs.getString("Giriş Saati");
                int giriskilosu = rs.getInt("Giriş Kilosu");
                String plaka = rs.getString("Plaka");
                String marka = rs.getString("Marka");
                String tip = rs.getString("Tip");
                String cıkıssaati = rs.getString("Çıkış Saati");
                int cıkıskilosu = rs.getInt("Çıkış Kilosu");
                
                System.out.println("id : " + id + " Giriş Saati: " + girissaati + " Giriş Kilosu: " + giriskilosu + " Plaka : " + plaka + " Marka : " + marka + " Tip : " + tip + " Çıkış Saati : " + cıkıssaati + " Çıkış Kilosu : " + cıkıskilosu);
            }
        }catch(SQLException ex){
            Logger.getLogger(SorguKamyon.class.getName()).log(Level.SEVERE,null,ex);
        }
    }
    public boolean sorgulaplaka(String plaka){
    boolean varmı=false;
        try {
            stmt=conn.createStatement();
            DefaultTableModel model=(DefaultTableModel) tablo.getModel();
            String sorgu="Select*From kamyon";
            ResultSet rs=stmt.executeQuery(sorgu);
            while (rs.next()) {
                String pl=rs.getString("Plaka");
                if (rs.getString("Plaka").equals(plaka)) {
                    varmı=true;
                    return varmı;
                }
                
            }
            return varmı;
        } catch (SQLException ex) {
            Logger.getLogger(Sorgulama.class.getName()).log(Level.SEVERE, null, ex);
        }
        return varmı;
}
    public void kamyoncıkıs(Map liste)
    {
        try {
            stmt=conn.createStatement();
            String plaka=liste.get("Plaka").toString().trim();
            String gkilo_alan=liste.get("Giriş Kilosu").toString().trim();
            String id_giris = liste.get("id").toString().trim();
            String giris_alan = liste.get("Giriş Saati").toString().trim();
            String marka = liste.get("Marka").toString().trim();
            String tip = liste.get("Tip").toString().trim();
            String cıkıs_saat = liste.get("Çıkış Saati").toString().trim();
            String cıkıs_kilo = liste.get("Çıkış Kilosu").toString().trim();
            
            String sorgu=String.format("Insert Into kamyon(`id`,`Giriş Saati`,`Giriş Kilosu`,`Plaka`,`Marka`,`Tip`,`Çıkış Saati`,`Çıkış Kilosu`)values('%d','%s','%d','%s','%s','%s')",id_giris,giris_alan,gkilo_alan,plaka,marka,tip,cıkıs_saat,cıkıs_kilo);
            stmt.executeUpdate(sorgu);
            System.out.println("Eklendi");
        } catch (Exception e) {
            System.out.println("Eklenemedi");
        }
    }
    
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cıkıs_kilo;
    private javax.swing.JTextField cıkıs_saat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton kaydet;
    private javax.swing.JButton sorgula;
    private javax.swing.JTable tablo;
    // End of variables declaration//GEN-END:variables
}
